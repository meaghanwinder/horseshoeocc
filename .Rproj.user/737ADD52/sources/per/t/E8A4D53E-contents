---
title: "Simulated Data Analysis JAGS code"
format: html
---

```{r, eval = F}
# R2jags - immediately previous version works
packageurl <- "https://cran.r-project.org/src/contrib/Archive/R2jags/R2jags_0.8-5.tar.gz"
install.packages(packageurl, repos = NULL, type="source")
```


```{r, message = F, warning = F}
rm(list = ls())
library(R2jags);library(tidyverse);library(rstan);library(coda);library(HDInterval);library(truncnorm);library(latex2exp)
jags_summary <- function(fit, warmup = nrow(fit[[1]])/2, thin = 1){
  # convert to coda for normal summary
  fit_warmup <- lapply(fit, function(x) x[(warmup+1):nrow(x),])
  coda_samples <- as.mcmc.list(lapply(fit_warmup, function(x) as.mcmc(
    x, start = warmup+1, end = nrow(fit), thin = thin
  )))
  
  sum <- summary(coda_samples)
  params <- dimnames(sum$statistics)[[1]]
  tmp_sum <- cbind(sum$statistics, sum$quantiles)
  
  # get r hat / n_eff
  mat <- matrix(NA, nrow = nrow(tmp_sum), ncol = 3)
  colnames(mat) <- c("Rhat", "ess_bulk", "ess_tail")
  for(i in 1:nrow(tmp_sum)){
    tmp <- sapply(fit, function(x) x[,i])
    mat[i,] <- c(Rhat(tmp), ess_bulk(tmp), ess_tail(tmp))
  }
  
  # get hdi interval
  all_samps <- do.call("rbind", coda_samples)
  hdi_lower <- apply(all_samps, 2, hdi)[1, ]
  hdi_upper <- apply(all_samps, 2, hdi)[2, ]
  
  # get median
  median <- apply(all_samps, 2, median)
  
  # # get mode
  # all_samps <- do.call("rbind", coda_samples)
  # mod <- apply(all_samps, 2, getmode)
  # prob <- apply(all_samps, 2, mean)
  
  # contains 0 
  contain0 <- tmp_sum[,5]<0 & tmp_sum[,9]>0
  
  contain0_hdi <- hdi_lower<0 & hdi_upper>0
  
  # out
  out <- cbind(tmp_sum, 
               contain0 = contain0, 
               # mode = mod, prob = prob, 
               Median = median, 
               hdi_lower, 
               hdi_upper,
               mat)
  return(out)
}
trace_plot <- function(samples, which = c("sigma")){
  niter <- dim(samples[[1]])[1]
  nchains <- length(samples)
  params <- colnames(samples[[1]])
  
  combined_samples <- do.call("rbind", samples)
  combined_samples <- combined_samples %>%
    as_tibble %>%
    mutate(iter = rep(1:niter, nchains), chain = factor(rep(1:nchains, each = niter))) %>%
    dplyr::select(chain, iter, everything()) %>%
    pivot_longer(cols = -c(1:2), names_to = "param", values_to = "trace")
  
  if(all(is.numeric(which))) which <- unique(combined_samples$param)[which]
  
  p <- combined_samples %>%
    filter(param %in% which) %>%
    ggplot() + 
    geom_line(aes(x = iter, y = trace, col = chain, group = chain)) +
    theme_bw() +
    facet_wrap(~ param, scales = "free_y")
  
  return(p)
  
}
convert_to_list <- function(fit){
  nchains <- fit$BUGSoutput$n.chains
  nkeep <- fit$BUGSoutput$n.keep
  array <- fit$BUGSoutput$sims.array
  
  out <- list()
  for(i in 1:(dim(array)[2])) out[[i]] <- array[,i,]
  return(out)
}

cred_plot <- function(summary, which = c("beta"), ylim = c(-4, 4)){
  plot_df <- summary %>%
    data.frame() %>% 
    filter(str_detect(rownames(.), "beta")) %>% 
    filter(rownames(.) != "beta0") %>% 
    mutate(param = str_extract(rownames(.), "(?<=\\[)[:digit:]+")) %>% 
    filter(rownames(.) != "beta[1]" & rownames(.) != "beta[2]") %>% 
    select(param, Median, hdi_lower, hdi_upper)
  
  p <- plot_df %>% 
    ggplot(aes(x = as.numeric(param))) + 
    # geom_hline(yintercept = 0) + 
    ylim(ylim[1], ylim[2]) + 
    geom_linerange(aes(ymin = hdi_lower, ymax = hdi_upper), 
                   color = "grey", 
                   linewidth = 1) + 
    labs(x = "Variable", 
         y = "") + 
    geom_point(aes(y = Median)) + 
    theme_bw()
  
  return(p)
}

meff_plot <- function(samples, title = NULL, x = TeX("$m_{eff}$"), y = NULL, prior = NULL){
  # posterior info
  all_samps <- do.call("rbind", samples)
  samps <- all_samps %>% 
    data.frame %>% 
    select(mefft)
  
   p <- samps %>% 
    ggplot(aes(x = mefft)) +
    geom_histogram(bins = 20) +
    labs(title = title, 
         x = x, 
         y = y) + 
     theme_bw() + 
     theme(axis.text.y = element_blank(), 
           axis.ticks.y = element_blank(), 
           text = element_text(size = 8, hjust = 0.1)
     ) 
  
   return(p)
}
```

## Simulate occupancy data

```{r}
library(tidyverse)

logit <- function(p){
  log(p/(1 - p))
}

invlogit <- function(x){
  exp(x)/(1 + exp(x))
}

set.seed(4)

nsite <- 1000
nsamp <- 10

det.prob <- 0.9

beta0 <- 1 #### change value of intercept based on fitted model 

# 3 true covariates
beta3 <- c(2, -2, 2) 
x3 <- rnorm(nsite*length(beta3), 0, 1) %>% 
  matrix(nrow = nsite, ncol = length(beta3)) %>% 
  scale()

colnames(x3) <- paste0("x", 1:length(beta3))

occ.prob3 <- invlogit(beta0 + x3 %*% beta3)

z3 <- rbinom(nsite, 1, occ.prob3)

df3 <- data.frame(site = 1:nsite, 
                  nsamp = nsamp, 
                  x3, 
                  occ.prob3 = occ.prob3,
                  z3)

y <- rep(NA, nsite)

for(i in 1:nrow(df3)){
  y[i] <- rbinom(1, nsamp, det.prob * z3[i])
}

df3 <- cbind(df3, 
             det = y)

sim_data3 <- list(df = df3[, c("site", "nsamp", paste0("x", 1:3), "det")],
                  z = z3, 
                  x = x3,
                  det.prob = det.prob, 
                  beta0 = beta0, 
                  beta = beta3)




# 3 true covariates and 22 zero
beta25 <- c(beta3, rep(0, 22))
x22 <- rnorm(nsite*22, 0, 1) %>% 
  matrix(nrow = nsite, ncol = 22) %>% 
  scale()
x25 <- cbind(x3, x22)

colnames(x25) <- paste0("x", 1:length(beta25))

occ.prob25 <- invlogit(beta0 + x25 %*% beta25)

z25 <- rbinom(nsite, 1, occ.prob25)

df25 <- data.frame(site = 1:nsite, 
                   nsamp = nsamp, 
                   x25, 
                   occ.prob25 = occ.prob25,
                   z25)

y <- rep(NA, nsite)

for(i in 1:nrow(df25)){
  y[i] <- rbinom(1, nsamp, det.prob * z25[i])
}

df25 <- cbind(df25, 
              det = y)

sim_data25 <- list(df = df25[, c("site", "nsamp", paste0("x", 1:25), "det")],
                   z = z25, 
                   x = x25,
                   det.prob = det.prob, 
                   beta0 = beta0, 
                   beta = beta3)




# 3 true covariates and 97 zero
beta100 <- c(beta3, rep(0, 97))
x75 <- rnorm(nsite*75, 0, 1) %>% 
  matrix(nrow = nsite, ncol = 75) %>% 
  scale()
x100 <- cbind(x25, x75)

colnames(x100) <- paste0("x", 1:length(beta100))

occ.prob100 <- invlogit(beta0 + x100 %*% beta100)

z100 <- rbinom(nsite, 1, occ.prob100)

df100 <- data.frame(site = 1:nsite, 
                    nsamp = nsamp, 
                    x100, 
                    occ.prob100 = occ.prob100,
                    z100)

y <- rep(NA, nsite)

for(i in 1:nrow(df100)){
  y[i] <- rbinom(1, 10, det.prob * z100[i])
}

df100 <- cbind(df100, 
               det = y)

sim_data100 <- list(df = df100[, c("site", "nsamp", paste0("x", 1:100), "det")],
                    z = z100, 
                    x = x100,
                    det.prob = det.prob, 
                    beta0 = beta0, 
                    beta = beta3)
```


## Fit regularized horseshoe with $\tau \sim C^+(0, 1)$ with 100 potential covariates 

```{r, eval = T}
reg_hs <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
    y[i] ~ dbin(p*z[i], nsamp[i])
  }
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  p ~ dbeta(1, 1)
  
  tau ~ dt(0, 1/1, 1);T(0,) # global shrinkage
  tau2 <- tau*tau
  c2.rep ~ dgamma(df.slab/2, scale.slab^2*df.slab/2) 
  c2 <- 1/c2.rep
  
  for(j in 1:D){
    lambda[j] ~ dt(0, 1, 1);T(0,)
    lambda2[j] <- lambda[j]*lambda[j]
    lambdat[j] <- (c2 * lambda2[j])/(c2 + tau2 * lambda2[j])
    lambda2t[j] <- lambdat[j] * lambdat[j]
    beta[j] ~ dnorm(0, 1/(tau2 * lambda2t[j]))
  }
  
  # calculate shrinkage factor
  b <- 1/(1 + nrow_site_df * 1/pseudovar * c2)
  
  for(j in 1:D){
    kappa[j] <- 1/(1 + nrow_site_df * 1/pseudovar * tau2 * 1 * lambda2[j])  
    kappat[j] <- (1-b)*kappa[j] + b
  }
  meff <- sum(1 - kappa[1:D])
  mefft <- (1-b)*meff
}

set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_100.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_100 <- readRDS("sim_reghs_100.rds")
trace_plot(sim_reghs_100, "tau")
trace_plot(sim_reghs_100, paste0("lambdat[", 1:10, "]"))
trace_plot(sim_reghs_100, c("beta0", paste0("beta[", 1:10, "]")))
sim_reghs_sum100 <- jags_summary(sim_reghs_100, warmup = 0)

p1_1 <- cred_plot(sim_reghs_sum100, ylim = c(-1, 1))
p2_1 <- meff_plot(sim_reghs_100, title = TeX("$\\tau \\sim C^+(0,1)$"), y = NULL, x = NULL)
gridExtra::grid.arrange(p1_1, p2_1, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, 1)$ with 25 potential covariates 

```{r, eval = T}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_25.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_25 <- readRDS("sim_reghs_25.rds")
trace_plot(sim_reghs_25, "tau")
trace_plot(sim_reghs_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_25, c("beta0", paste0("beta[", sample(1:25, 9), "]")))
sim_reghs_sum25 <- jags_summary(sim_reghs_25, warmup = 0)

p1_2 <- cred_plot(sim_reghs_sum25, ylim = c(-1, 1))
p2_2 <- meff_plot(sim_reghs_25, title = TeX("$\\tau \\sim C^+(0,1)$"), y = NULL, x = NULL)
gridExtra::grid.arrange(p1_2, p2_2, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and $p_0 = 3$

```{r, eval = T}
reg_hs_tau0 <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
    y[i] ~ dbin(p*z[i], nsamp[i])
  }
  
  # compute quantities for hyper prior on tau
  tau0 <- p0/(D-p0) * sqrtpseudovar / (sqrtnsite)
  tau02 <- tau0 * tau0
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  p ~ dbeta(1, 1)
  
  tau ~ dt(0, 1/tau02, 1);T(0,) # global shrinkage
  tau2 <- tau*tau
  c2.rep ~ dgamma(df.slab/2, scale.slab^2*df.slab/2) 
  c2 <- 1/c2.rep
  
  for(j in 1:D){
    lambda[j] ~ dt(0, 1, 1);T(0,)
    lambda2[j] <- lambda[j]*lambda[j]
    lambdat[j] <- (c2 * lambda2[j])/(c2 + tau2 * lambda2[j])
    lambda2t[j] <- lambdat[j] * lambdat[j]
    beta[j] ~ dnorm(0, 1/(tau2 * lambda2t[j]))
  }
  
  # calculate shrinkage factor
  b <- 1/(1 + nrow_site_df * 1/pseudovar * c2)
  
  for(j in 1:D){
    kappa[j] <- 1/(1 + nrow_site_df * 1/pseudovar * tau2 * 1 * lambda2[j])  
    kappat[j] <- (1-b)*kappa[j] + b
  }
  meff <- sum(1 - kappa[1:D])
  mefft <- (1-b)*meff
}

set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 3,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_p03_100.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_p03_100 <- readRDS("sim_reghs_p03_100.rds")
trace_plot(sim_reghs_p03_100, "tau")
trace_plot(sim_reghs_p03_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(sim_reghs_p03_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
sim_reghs_p03_sum100 <- jags_summary(sim_reghs_p03_100, warmup = 0)

p1_3 <- cred_plot(sim_reghs_p03_sum100, ylim = c(-1, 1))
p2_3 <- meff_plot(sim_reghs_p03_100, title = TeX("$p_0 = 3$"), x = NULL)
gridExtra::grid.arrange(p1_3, p2_3, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and $p_0 = 10$
      
```{r, eval = T}
set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 10,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_p010_100.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_p010_100 <- readRDS("sim_reghs_p010_100.rds")
trace_plot(sim_reghs_p010_100, "tau")
trace_plot(sim_reghs_p010_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(sim_reghs_p010_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
sim_reghs_p010_sum100 <- jags_summary(sim_reghs_p010_100, warmup = 0)

p1_4 <- cred_plot(sim_reghs_p010_sum100, ylim = c(-1, 1))
p2_4 <- meff_plot(sim_reghs_p010_100, title = TeX("$p_0 = 10$"), x = NULL)
gridExtra::grid.arrange(p1_4, p2_4, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and $p_0 = 25$
      
```{r, eval = T}
set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 25,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_p025_100.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_p025_100 <- readRDS("sim_reghs_p025_100.rds")
trace_plot(sim_reghs_p025_100, "tau")
trace_plot(sim_reghs_p025_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(sim_reghs_p025_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
sim_reghs_p025_sum100 <- jags_summary(sim_reghs_p025_100, warmup = 0)

p1_5 <- cred_plot(sim_reghs_p025_sum100, ylim = c(-5, 5))
p2_5 <- meff_plot(sim_reghs_p025_100, title = TeX("$p_0 = 25$"), x = NULL)
gridExtra::grid.arrange(p1_5, p2_5, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 25 potential covariates and $p_0 = 3$

```{r, eval = T}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 3,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_p03_25.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_p03_25 <- readRDS("sim_reghs_p03_25.rds")
trace_plot(sim_reghs_p03_25, "tau")
trace_plot(sim_reghs_p03_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_p03_25, c("beta0", paste0("beta[", sample(1:25, 9), "]")))
sim_reghs_p03_sum25 <- jags_summary(sim_reghs_p03_25, warmup = 0)

p1_6 <- cred_plot(sim_reghs_p03_sum25, ylim = c(-1, 1))
p2_6 <- meff_plot(sim_reghs_p03_25, title = TeX("$p_0 = 3$"), x = NULL)
gridExtra::grid.arrange(p1_6, p2_6, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 25 potential covariates and $p_0 = 7$

```{r, eval = T}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 7,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_p07_25.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_p07_25 <- readRDS("sim_reghs_p07_25.rds")
trace_plot(sim_reghs_p07_25, "tau")
trace_plot(sim_reghs_p07_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_p07_25, c("beta0", paste0("beta[", sample(1:25, 9), "]")))
sim_reghs_p07_sum25 <- jags_summary(sim_reghs_p07_25, warmup = 0)

p1_7 <- cred_plot(sim_reghs_p07_sum25, ylim = c(-1, 1))
p2_7 <- meff_plot(sim_reghs_p07_25, title = TeX("$p_0 = 7$"), x = NULL)
gridExtra::grid.arrange(p1_7, p2_7, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 25 potential covariates and $p_0 = 10$

```{r, eval = T}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 10,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_p010_25.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_p010_25 <- readRDS("sim_reghs_p010_25.rds")
trace_plot(sim_reghs_p010_25, "tau")
trace_plot(sim_reghs_p010_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_p010_25, c("beta0", paste0("beta[", sample(1:25, 9), "]")))
sim_reghs_p010_sum25 <- jags_summary(sim_reghs_p010_25, warmup = 0)

p1_8 <- cred_plot(sim_reghs_p010_sum25, ylim = c(-1, 1))
p2_8 <- meff_plot(sim_reghs_p010_25, title = TeX("$p_0 = 10$"), x = NULL)
gridExtra::grid.arrange(p1_8, p2_8, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 3$

```{r, eval = T}
reg_hs_tau0_p0prior <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
    y[i] ~ dbin(p*z[i], nsamp[i])
  }
  
  ## p0_mixture prior 
  inform_p0 ~ dnorm(p0_guess, 1/var_inform);T(1, D-1)
  flat_p0 ~ dnorm(p0_guess, 1/var_flat);T(1, D-1)
  p0 <- weight_inform*inform_p0 + weight_flat*flat_p0
  
  # compute quantities for hyper prior on tau
  tau0 <- p0/(D-p0) * sqrtpseudovar / (sqrtnsite)
  tau02 <- tau0 * tau0
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  p ~ dbeta(1, 1)
  
  tau ~ dt(0, 1/tau02, 1);T(0,) # global shrinkage
  tau2 <- tau*tau
  c2.rep ~ dgamma(df.slab/2, scale.slab^2*df.slab/2) 
  c2 <- 1/c2.rep
  
  for(j in 1:D){
    lambda[j] ~ dt(0, 1, 1);T(0,)
    lambda2[j] <- lambda[j]*lambda[j]
    lambdat[j] <- (c2 * lambda2[j])/(c2 + tau2 * lambda2[j])
    lambda2t[j] <- lambdat[j] * lambdat[j]
    beta[j] ~ dnorm(0, 1/(tau2 * lambda2t[j]))
  }
  
  # calculate shrinkage factor
  b <- 1/(1 + nrow_site_df * 1/pseudovar * c2)
  
  for(j in 1:D){
    kappa[j] <- 1/(1 + nrow_site_df * 1/pseudovar * tau2 * 1 * lambda2[j])  
    kappat[j] <- (1-b)*kappa[j] + b
  }
  meff <- sum(1 - kappa[1:D])
  mefft <- (1-b)*meff
}

set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 3,
    var_inform = 1, 
    var_flat = 36, 
    weight_flat = 0.5, 
    weight_inform = 0.5,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_mixture3_100.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_mixture3_100 <- readRDS("sim_reghs_mixture3_100.rds")
trace_plot(sim_reghs_mixture3_100, "tau")
trace_plot(sim_reghs_mixture3_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(sim_reghs_mixture3_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
sim_reghs_mixture3_sum100 <- jags_summary(sim_reghs_mixture3_100, warmup = 0)

p1_9 <- cred_plot(sim_reghs_mixture3_sum100, ylim = c(-1, 1))
p2_9 <- meff_plot(sim_reghs_mixture3_100, title = TeX("$p_0$ mixture prior"), x = NULL) 

gridExtra::grid.arrange(p1_9, p2_9, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 10$

```{r, eval = F}
set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 10,
    var_inform = 9, 
    var_flat = 144,  
    weight_flat = 0.5, 
    weight_inform = 0.5,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_mixture10_100.rds")
```

```{r, eval = F, fig.width = 3, fig.height = 3}
sim_reghs_mixture10_100 <- readRDS("sim_reghs_mixture10_100.rds")
trace_plot(sim_reghs_mixture10_100, "tau")
trace_plot(sim_reghs_mixture10_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(sim_reghs_mixture10_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
sim_reghs_mixture10_sum100 <- jags_summary(sim_reghs_mixture10_100, warmup = 0)

p1_10 <- cred_plot(sim_reghs_mixture10_sum100, ylim = c(-1, 1))
p2_10 <- meff_plot(sim_reghs_mixture10_100, title = TeX("$p_0$ mixture prior centered at $10$"), x = NULL)
gridExtra::grid.arrange(p1_10, p2_10, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 25$

```{r, eval = F}
set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 25,
    var_inform = 16, 
    var_flat = 400,  
    weight_flat = 0.5, 
    weight_inform = 0.5,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_mixture25_100.rds")
```

```{r, eval = F, fig.width = 3, fig.height = 3}
sim_reghs_mixture25_100 <- readRDS("sim_reghs_mixture25_100.rds")
trace_plot(sim_reghs_mixture25_100, "tau")
trace_plot(sim_reghs_mixture25_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(sim_reghs_mixture25_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
sim_reghs_mixture25_sum100 <- jags_summary(sim_reghs_mixture25_100, warmup = 0)

p1_11 <- cred_plot(sim_reghs_mixture25_sum100, ylim = c(-1, 1))
p2_11 <- meff_plot(sim_reghs_mixture25_100, title = TeX("$p_0$ mixture prior centered at $25$"), x = NULL)
gridExtra::grid.arrange(p1_11, p2_11, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 25 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 3$

```{r, eval = T}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 3,
    var_inform = 1, 
    var_flat = 25,   
    weight_flat = 0.5, 
    weight_inform = 0.5,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_mixture3_25.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_mixture3_25 <- readRDS("sim_reghs_mixture3_25.rds")
trace_plot(sim_reghs_mixture3_25, "tau")
trace_plot(sim_reghs_mixture3_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_mixture3_25, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:25, 9), "]")))
sim_reghs_mixture3_sum25 <- jags_summary(sim_reghs_mixture3_25, warmup = 0)

p1_12 <- cred_plot(sim_reghs_mixture3_sum25, ylim = c(-1, 1))
p2_12 <- meff_plot(sim_reghs_mixture3_25, title = TeX("$p_0$ mixture prior"), x = NULL)
gridExtra::grid.arrange(p1_12, p2_12, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 25 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 7$

```{r, eval = F}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 7,
    var_inform = 1, 
    var_flat = 25,  
    weight_flat = 0.5, 
    weight_inform = 0.5,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_mixture7_25.rds")
```

```{r, eval = F, fig.width = 3, fig.height = 3}
sim_reghs_mixture7_25 <- readRDS("sim_reghs_mixture7_25.rds")
trace_plot(sim_reghs_mixture7_25, "tau")
trace_plot(sim_reghs_mixture7_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_mixture7_25, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:25, 9), "]")))
sim_reghs_mixture7_sum25 <- jags_summary(sim_reghs_mixture7_25, warmup = 0)

p1_13 <- cred_plot(sim_reghs_mixture7_sum25, ylim = c(-1, 1))
p2_13 <- meff_plot(sim_reghs_mixture7_25, title = TeX("$p_0$ mixture prior centered at $7$"), x = NULL)
gridExtra::grid.arrange(p1_13, p2_13, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 25 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 10$

```{r, eval = F}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 10,
    var_inform = 1, 
    var_flat = 25, 
    weight_flat = 0.5, 
    weight_inform = 0.5,  
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_mixture10_25.rds")
```

```{r, eval = F, fig.width = 3, fig.height = 3}
sim_reghs_mixture10_25 <- readRDS("sim_reghs_mixture10_25.rds")
trace_plot(sim_reghs_mixture10_25, "tau")
trace_plot(sim_reghs_mixture10_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_mixture10_25, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:25, 9), "]")))
sim_reghs_mixture10_sum25 <- jags_summary(sim_reghs_mixture10_25, warmup = 0)

p1_14 <- cred_plot(sim_reghs_mixture10_sum25, ylim = c(-1, 1))
p2_14 <- meff_plot(sim_reghs_mixture10_25, title = TeX("$p_0$ mixture prior centered at $10$"), x = NULL)
gridExtra::grid.arrange(p1_14, p2_14, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a uniform prior for $p_0$

```{r, eval = T}
reg_hs_tau0_p0unif <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
    y[i] ~ dbin(p*z[i], nsamp[i])
  }
  
  ## p0_uniform
  p0 ~ dunif(1, D - 1) 
  
  # compute quantities for hyper prior on tau
  tau0 <- p0/(D-p0) * sqrtpseudovar / (sqrtnsite)
  tau02 <- tau0 * tau0
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  p ~ dbeta(1, 1)
  
  tau ~ dt(0, 1/tau02, 1);T(0,) # global shrinkage
  tau2 <- tau*tau
  c2.rep ~ dgamma(df.slab/2, scale.slab^2*df.slab/2) 
  c2 <- 1/c2.rep
  
  for(j in 1:D){
    lambda[j] ~ dt(0, 1, 1);T(0,)
    lambda2[j] <- lambda[j]*lambda[j]
    lambdat[j] <- (c2 * lambda2[j])/(c2 + tau2 * lambda2[j])
    lambda2t[j] <- lambdat[j] * lambdat[j]
    beta[j] ~ dnorm(0, 1/(tau2 * lambda2t[j]))
  }
  
  # calculate shrinkage factor
  b <- 1/(1 + nrow_site_df * 1/pseudovar * c2)
  
  for(j in 1:D){
    kappa[j] <- 1/(1 + nrow_site_df * 1/pseudovar * tau2 * 1 * lambda2[j])  
    kappat[j] <- (1-b)*kappa[j] + b
  }
  meff <- sum(1 - kappa[1:D])
  mefft <- (1-b)*meff
}

set.seed(4)
init_hs100 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0unif,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(sim_data100$df),
    D = ncol(sim_data100$x),
    x = sim_data100$x,
    nrow_site_df = nrow(sim_data100$df), 
    y = sim_data100$df$det,
    df.slab = 4,
    scale.slab = 2, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data100$df)), 
    nsamp = sim_data100$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_unif_100.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_unif_100 <- readRDS("sim_reghs_unif_100.rds")
trace_plot(sim_reghs_unif_100, "tau")
trace_plot(sim_reghs_unif_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(sim_reghs_unif_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
sim_reghs_unif_sum100 <- jags_summary(sim_reghs_unif_100, warmup = 0)

p1_15 <- cred_plot(sim_reghs_unif_sum100, ylim = c(-1, 1))
p2_15 <- meff_plot(sim_reghs_unif_100, title = TeX("$p_0$ uniform prior"), x = NULL)
gridExtra::grid.arrange(p1_15, p2_15, nrow = 2)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 25 potential covariates and with a uniform prior for $p_0$

```{r, eval = T}
set.seed(4)
init_hs25 <- function(){
  list(
    p = 0.9, 
    beta0 = 0,
    beta = rep(0, 25),
    lambda = rep(1, 25),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, nsite)
  )
}

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0unif,
  n.chains = 3,
  inits = init_hs25,
  data = list(
    nsite = nrow(sim_data25$df),
    D = ncol(sim_data25$x),
    x = sim_data25$x,
    nrow_site_df = nrow(sim_data25$df), 
    y = sim_data25$df$det,
    df.slab = 4,
    scale.slab = 2, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(sim_data25$df)), 
    nsamp = sim_data25$df$nsamp
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("p", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "sim_reghs_unif_25.rds")
```

```{r, fig.width = 3, fig.height = 3}
sim_reghs_unif_25 <- readRDS("sim_reghs_unif_25.rds")
trace_plot(sim_reghs_unif_25, "tau")
trace_plot(sim_reghs_unif_25, paste0("lambdat[", sample(1:25, 9), "]"))
trace_plot(sim_reghs_unif_25, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:25, 9), "]")))
sim_reghs_unif_sum25 <- jags_summary(sim_reghs_unif_25, warmup = 0)

p1_16 <- cred_plot(sim_reghs_unif_sum25, ylim = c(-1, 1))
p2_16 <- meff_plot(sim_reghs_unif_25, title = TeX("$p_0$ uniform prior"), x = NULL)
gridExtra::grid.arrange(p1_16, p2_16, nrow = 2)
```

# Plot

```{r, fig.width = 16, fig.height = 2.5}
library(patchwork)
theme_border <- theme_gray() + 
  theme(plot.background = element_rect(fill = NA, colour = 'black', linewidth = 0.7))

gridExtra::grid.arrange(p2_2, p2_6, p2_7, p2_8, 
                        p2_12, 
                        #p2_13, p2_14, p2_16, 
                        nrow = 1)
gridExtra::grid.arrange(p2_1, p2_3, p2_4, p2_5, 
                        p2_9, 
                        #p2_10, p2_11, p2_15, 
                        nrow = 1)
```




