#' Title
#'
#' @param x tmp
#' @param which tmp
#' @param ... tmp
#'
#' @returns plot
#' @export
#'
#'
plot.horseshoeocc_mcmc <- function(x, which = c("beta"), ...){
  if(class(x)[1] == "horseshoeocc"){
    x <- x$mcmc
  }
  niter <- dim(x[[1]])[1]
  nchains <- length(x)
  params <- colnames(x[[1]])

  combined_samples <- do.call("rbind", x)
  combined_samples <- combined_samples %>%
    as_tibble %>%
    mutate(iter = rep(1:niter, nchains),
           chain = factor(rep(1:nchains, each = niter))) %>%
    dplyr::select(chain,
                  iter,
                  everything()) %>%
    pivot_longer(cols = -c(1:2),
                 names_to = "param",
                 values_to = "trace")

  if(length(which) == 1){
    if(all(is.numeric(which))){
      vars <- unique(combined_samples$param)[which]
    } else {
      vars <- combined_samples %>%
        slice(which(str_detect(param, which))) %>%
        select(param) %>%
        unique() %>%
        as.vector() %>%
        unlist()
    }

    if(length(vars) == 0) {
      stop(paste(which, "not found. Available variables:", paste(all_vars, collapse = ", ")))
    }
  } else if(length(which) > 1){
    if(all(is.numeric(which))){
      vars <- unique(combined_samples$param)[which]
    } else {
      vars <- list()
      for(i in 1:length(which)){
        vars[[i]] <- combined_samples %>%
          slice(which(str_detect(param, which[i]))) %>%
          select(param) %>%
          unique() %>%
          as.vector()
      }
      vars <- unlist(vars)
    }

    if(length(vars) == 0) {
      stop(paste(which, "not found. Available variables:", paste(all_vars, collapse = ", ")))
    }
  }


  p <- combined_samples %>%
    filter(param %in% vars) %>%
    ggplot2::ggplot() +
    ggplot2::geom_line(aes(x = iter, y = trace, col = chain, group = chain)) +
    ggplot2::theme_bw() +
    ggplot2::facet_wrap(~ param, scales = "free_y")

  return(p)

}
