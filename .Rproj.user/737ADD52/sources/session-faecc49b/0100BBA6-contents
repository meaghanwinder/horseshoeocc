---
title: "Koala Data Analysis JAGS code"
format: html
---

```{r, eval = F}
# R2jags - immediately previous version works
packageurl <- "https://cran.r-project.org/src/contrib/Archive/R2jags/R2jags_0.8-5.tar.gz"
install.packages(packageurl, repos = NULL, type="source")
```


```{r, message = F, warning = F}
rm(list = ls())
library(R2jags);library(tidyverse);library(rstan);library(coda)
jags_summary <- function(fit, warmup = nrow(fit[[1]])/2, thin = 1){
  # convert to coda for normal summary
  fit_warmup <- lapply(fit, function(x) x[(warmup+1):nrow(x),])
  coda_samples <- as.mcmc.list(lapply(fit_warmup, function(x) as.mcmc(
    x, start = warmup+1, end = nrow(fit), thin = thin
  )))
  
  sum <- summary(coda_samples)
  params <- dimnames(sum$statistics)[[1]]
  tmp_sum <- cbind(sum$statistics, sum$quantiles)
  
  # get r hat / n_eff
  mat <- matrix(NA, nrow = nrow(tmp_sum), ncol = 3)
  colnames(mat) <- c("Rhat", "ess_bulk", "ess_tail")
  for(i in 1:nrow(tmp_sum)){
    tmp <- sapply(fit, function(x) x[,i])
    mat[i,] <- c(Rhat(tmp), ess_bulk(tmp), ess_tail(tmp))
  }
  
  # # get mode
  # all_samps <- do.call("rbind", coda_samples)
  # mod <- apply(all_samps, 2, getmode)
  # prob <- apply(all_samps, 2, mean)
  
  # contains 0 
  contain0 <- tmp_sum[,5]<0 & tmp_sum[,9]>0
  
  # out
  out <- cbind(tmp_sum, 
               contain0 = contain0, 
               # mode = mod, prob = prob, 
               mat)
  return(out)
}
trace_plot <- function(samples, which = c("sigma")){
  niter <- dim(samples[[1]])[1]
  nchains <- length(samples)
  params <- colnames(samples[[1]])
  
  combined_samples <- do.call("rbind", samples)
  combined_samples <- combined_samples %>%
    as_tibble %>%
    mutate(iter = rep(1:niter, nchains), chain = factor(rep(1:nchains, each = niter))) %>%
    dplyr::select(chain, iter, everything()) %>%
    pivot_longer(cols = -c(1:2), names_to = "param", values_to = "trace")
  
  if(all(is.numeric(which))) which <- unique(combined_samples$param)[which]
  
  p <- combined_samples %>%
    filter(param %in% which) %>%
    ggplot() + 
    geom_line(aes(x = iter, y = trace, col = chain, group = chain)) +
    theme_bw() +
    facet_wrap(~ param, scales = "free_y")
  
  return(p)
  
}
convert_to_list <- function(fit){
  nchains <- fit$BUGSoutput$n.chains
  nkeep <- fit$BUGSoutput$n.keep
  array <- fit$BUGSoutput$sims.array
  
  out <- list()
  for(i in 1:(dim(array)[2])) out[[i]] <- array[,i,]
  return(out)
}
```

## Read in and format Koala Data

```{r}
set.seed(12172024)

# read in koala data
weather <- read.csv("InclementWeatherScore_MP2019.csv")

koala <- read.csv("KoalaDetections_MP2019.csv")

sitecovs <- read.csv("Site_Covariates_MP2019.csv")

# join koala data sets
koala_long <- koala %>% 
  pivot_longer(starts_with("N"), 
               names_to = "visit", 
               values_to = "det") 

weather_long <- weather %>% 
  pivot_longer(starts_with("N"), 
               names_to = "visit", 
               values_to = "weather")

koala_data <- koala_long %>%
  inner_join(weather_long, 
             by = c("Site", "visit")) %>% 
  left_join(sitecovs, by = "Site") %>% 
  data.frame()

koala_data[, -c(1:3)] %>% 
  na.omit() %>% 
  cor() %>% 
  round(3)

# standardize meaningful coefficients from koala paper
koala_data <- koala_data %>% 
  mutate(LTC_s = scale(LTC), 
         SRD_s = scale(SRD), 
         weather_s = scale(weather))

x <- koala_data %>% 
  select(LTC_s, SRD_s)

w <- koala_data %>% 
  select(weather_s)

site_df <- koala_data %>%
  select(Site) %>%
  cbind(x) %>%
  unique() %>%
  mutate(site = factor(Site),
         site = as.numeric(site))

samp_df <- koala_data %>%
  select(Site, visit, det) %>%
  mutate(site = factor(Site),
         site = as.numeric(site)) %>%
  cbind(x, w)

x <- site_df[, -1] %>% 
  select(-site) %>% 
  as.matrix()

samp_df <- samp_df %>% 
  na.omit()

# original data
koala_dat <- list(site_df = site_df, 
                  samp_df = samp_df, 
                  x = x,
                  w = samp_df$weather_s)

# simulate random site-covariates so that D.site = 10
D.site10 <- 10
x_extra10 <- rnorm((D.site10-2)*nrow(koala_dat$x)) %>% 
  matrix(nrow = nrow(koala_dat$x)) %>% 
  scale()

x_10 <- cbind(x, x_extra10)

# cor(x_10) %>%
#   round(2)

site_df10 <- cbind(koala_dat$site_df, x_extra10)

koala_dat10 <- list(site_df = site_df10, 
                    samp_df = samp_df, 
                    x = x_10, 
                    w = samp_df$weather_s)

# simulate random site-covariates so that D.site = 50
D.site50 <- 50
x_extra50 <- rnorm((D.site50-2)*nrow(koala_dat$x)) %>% 
  matrix(nrow = nrow(koala_dat$x)) %>% 
  scale()

x_50 <- cbind(x, x_extra50)

# cor(x_50) %>% 
#   round(2)

site_df50 <- cbind(koala_dat$site_df, x_extra50)

koala_dat50 <- list(site_df = site_df50, 
                    samp_df = samp_df, 
                    x = x_50, 
                    w = samp_df$weather_s)

# simulate random site-covariates so that D.site = 100
D.site100 <- 100
x_extra100 <- rnorm((D.site100-2)*nrow(koala_dat$x)) %>% 
  matrix(nrow = nrow(koala_dat$x)) %>% 
  scale()

x_100 <- cbind(x, x_extra100)

# cor(x_100) %>% 
#   round(2)

site_df100 <- cbind(koala_dat$site_df, x_extra100)

koala_dat100 <- list(site_df = site_df100, 
                     samp_df = samp_df, 
                     x = x_100, 
                     w = samp_df$weather_s)
```

## Recreate results from paper  

```{r, eval = T}
# fit occupancy model in jags
occ_mod <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
  }
  
  for(j in 1:nrow_samp_df){
    logit(p[j]) <- alpha0 + inprod(alpha[1], w[j, 1])
    y[j] ~ dbern(p[j]*z[site_season_ndx[j]])
  }
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  for(i in 1:D){beta[i] ~ dnorm(0, 1/2)}
  alpha0 ~ dnorm(0, 1/2) # intercept
  alpha ~ dnorm(0, 1/2) # single slope coefficient for weather
}

# generate some inits
set.seed(12182024)
occ_init <- function(){
  list(
    alpha0 = 0,
    alpha = 0,
    beta0 = 0,
    beta = rep(0, 2),
    z = rep(1, 123)
  )
}


fit <- jags.parallel(
  model.file = occ_mod,
  n.chains = 3,
  inits = occ_init,
  data = list(
    nsite = nrow(koala_dat$site_df),
    D = ncol(koala_dat$x),
    x = koala_dat$x,
    w = koala_dat$w, 
    nrow_site_df = nrow(koala_dat$site_df), 
    nrow_samp_df = nrow(koala_dat$samp_df), 
    site_season_ndx = koala_dat$samp_df$site,
    y = koala_dat$samp_df$det
  ),
  n.iter = 50000,
  n.burnin = 25000,
  n.thin = 1,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_occ.rds")
```

```{r, fig.width = 12, fig.height = 4}
koala_occ <- readRDS("koala_occ.rds")
trace_plot(koala_occ, c("beta0", "beta[1]", "beta[2]"))
koala_occ_sum <- jags_summary(koala_occ, warmup = 0)
```

## Fit occupancy model with no horseshoe for 10 potential covariates

```{r, eval = T}
# generate some inits
set.seed(12172024)
occ_init10 <- function(){
  list(
    alpha0 = 0,
    alpha = 0,
    beta0 = 0,
    beta = rep(0, 10),
    z = rep(1, 123)
  )
}


fit <- jags.parallel(
  model.file = occ_mod,
  n.chains = 3,
  inits = occ_init10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det
  ),
  n.iter = 50000,
  n.burnin = 25000,
  n.thin = 1,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_occ10.rds")
```

```{r, fig.width = 12, fig.height = 4}
koala_occ10 <- readRDS("koala_occ10.rds")
trace_plot(koala_occ10, c("beta0", paste0("beta[", 1:10, "]")))
koala_occ_sum10 <- jags_summary(koala_occ10, warmup = 0)
```

## Fit occupancy model with no horseshoe for 100 potential covariates

```{r, eval = T}
# generate some inits
set.seed(12172024)
occ_init100 <- function(){
  list(
    alpha0 = 0,
    alpha = 0,
    beta0 = 0,
    beta = rep(0, 100),
    z = rep(1, 123)
  )
}


fit <- jags.parallel(
  model.file = occ_mod,
  n.chains = 3,
  inits = occ_init100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$y
  ),
  n.iter = 50000,
  n.burnin = 25000,
  n.thin = 1,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_occ100.rds")
```

```{r, fig.width = 12, fig.height = 4}
koala_occ100 <- readRDS("koala_occ100.rds")
trace_plot(koala_occ100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
koala_occ_sum100 <- jags_summary(koala_occ100, warmup = 0)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, 1)$ with 10 potential covariates 

```{r, eval = T}
reg_hs <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
  }
  
  for(j in 1:nrow_samp_df){
    logit(p[j]) <- alpha0 + inprod(alpha[1], w[j, 1])
    y[j] ~ dbern(p[j]*z[site_season_ndx[j]])
  }
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  alpha0 ~ dnorm(0, 1/2) # intercept
  alpha ~ dnorm(0, 1/2) # single slope for weather 
  
  tau ~ dt(0, 1/1, 1);T(0,) # global shrinkage
  tau2 <- tau*tau
  c2.rep ~ dgamma(df.slab/2, scale.slab^2*df.slab/2) 
  c2 <- 1/c2.rep
  
  for(j in 1:D){
    lambda[j] ~ dt(0, 1, 1);T(0,)
    lambda2[j] <- lambda[j]*lambda[j]
    lambdat[j] <- (c2 * lambda2[j])/(c2 + tau2 * lambda2[j])
    lambda2t[j] <- lambdat[j] * lambdat[j]
    beta[j] ~ dnorm(0, 1/(tau2 * lambda2t[j]))
  }
  
  # calculate shrinkage factor
  b <- 1/(1 + nrow_site_df * 1/pseudovar * c2)
  
  for(j in 1:D){
    kappa[j] <- 1/(1 + nrow_site_df * 1/pseudovar * tau2 * 1 * lambda2t[j])  
    kappat[j] <- (1-b)*kappa[j] + b
  }
  meff <- sum(1 - kappa[1:D])
  mefft <- (1-b)*meff
}

# generate some inits
set.seed(12172024)
init_hs10 <- function(){
  list(
    alpha0 = 0,
    alpha = 0,
    beta0 = 0,
    beta = rep(0, 10),
    lambda = rep(1, 10),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, 123)
  )
}


fit <- jags.parallel(
  model.file = reg_hs,
  n.chains = 3,
  inits = init_hs10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    pseudovar = 4
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_10.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_10 <- readRDS("koala_reghs_10.rds")
trace_plot(koala_reghs_10, "tau")
trace_plot(koala_reghs_10, paste0("lambdat[", 1:10, "]"))
trace_plot(koala_reghs_10, c("beta0", paste0("beta[", 1:10, "]")))
koala_reghs_sum10 <- jags_summary(koala_reghs_10, warmup = 0)

kappa_ <- koala_reghs_sum10[rownames(koala_reghs_sum10) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, 1)$ with 100 potential covariates 

```{r, eval = T}
# generate some inits
set.seed(12172024)
init_hs100 <- function(){
  list(
    alpha0 = 0,
    alpha = 0,
    beta0 = 0,
    beta = rep(0, 100),
    lambda = rep(1, 100),
    tau = .05,
    c2.rep = 1, 
    z = rep(1, 123)
  )
}


fit <- jags.parallel(
  model.file = reg_hs,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    pseudovar = 4
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_100.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_100 <- readRDS("koala_reghs_100.rds")
trace_plot(koala_reghs_100, "tau")
trace_plot(koala_reghs_100, paste0("lambdat[", sample(1:50, 9), "]"))
trace_plot(koala_reghs_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:50, 9), "]")))
koala_reghs_sum100 <- jags_summary(koala_reghs_100, warmup = 0)

kappa_ <- koala_reghs_sum100[rownames(koala_reghs_sum100) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and $p_0 = 2$

```{r, eval = T}
reg_hs_tau0 <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
  }
  
  for(j in 1:nrow_samp_df){
    logit(p[j]) <- alpha0 + inprod(alpha[1], w[j, 1])
    y[j] ~ dbern(p[j]*z[site_season_ndx[j]])
  }
  
  # compute quantities for hyper prior on tau
  tau0 <- p0/(D-p0) * sqrtpseudovar / (sqrtnsite)
  tau02 <- tau0 * tau0
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  alpha0 ~ dnorm(0, 1/2) # intercept
  alpha ~ dnorm(0, 1/2) # single slope for weather 
  
  tau ~ dt(0, 1/tau02, 1);T(0,) # global shrinkage
  tau2 <- tau*tau
  c2.rep ~ dgamma(df.slab/2, scale.slab^2*df.slab/2) 
  c2 <- 1/c2.rep
  
  for(j in 1:D){
    lambda[j] ~ dt(0, 1, 1);T(0,)
    lambda2[j] <- lambda[j]*lambda[j]
    lambdat[j] <- (c2 * lambda2[j])/(c2 + tau2 * lambda2[j])
    lambda2t[j] <- lambdat[j] * lambdat[j]
    beta[j] ~ dnorm(0, 1/(tau2 * lambda2t[j]))
  }
  
  # calculate shrinkage factor
  b <- 1/(1 + nrow_site_df * 1/pseudovar * c2)
  
  for(j in 1:D){
    kappa[j] <- 1/(1 + nrow_site_df * 1/pseudovar * tau2 * 1 * lambda2t[j])  
    kappat[j] <- (1-b)*kappa[j] + b
  }
  meff <- sum(1 - kappa[1:D])
  mefft <- (1-b)*meff
}

set.seed(12182025)

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 2,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat100$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_p02_100.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_p02_100 <- readRDS("koala_reghs_p02_100.rds")
trace_plot(koala_reghs_p02_100, "tau")
trace_plot(koala_reghs_p02_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(koala_reghs_p02_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
koala_reghs_p02_sum100 <- jags_summary(koala_reghs_p02_100, warmup = 0)

kappa_ <- koala_reghs_p02_sum100[rownames(koala_reghs_p02_sum100) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and $p_0 = 10$

```{r, eval = T}
set.seed(12182025)

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 10,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat100$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_p010_100.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_p010_100 <- readRDS("koala_reghs_p010_100.rds")
trace_plot(koala_reghs_p010_100, "tau")
trace_plot(koala_reghs_p010_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(koala_reghs_p010_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
koala_reghs_p010_sum100 <- jags_summary(koala_reghs_p010_100, warmup = 0)

kappa_ <- koala_reghs_p010_sum100[rownames(koala_reghs_p010_sum100) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and $p_0 = 25$

```{r, eval = T}
set.seed(12182025)

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 25,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat100$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_p025_100.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_p025_100 <- readRDS("koala_reghs_p025_100.rds")
trace_plot(koala_reghs_p025_100, "tau")
trace_plot(koala_reghs_p025_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(koala_reghs_p025_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
koala_reghs_p025_sum100 <- jags_summary(koala_reghs_p025_100, warmup = 0)


kappa_ <- koala_reghs_p025_sum100[rownames(koala_reghs_p025_sum100) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 10 potential covariates and $p_0 = 2$

```{r, eval = T}
set.seed(12182025)

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 2,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat10$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_p02_10.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_p02_10 <- readRDS("koala_reghs_p02_10.rds")
trace_plot(koala_reghs_p02_10, "tau")
trace_plot(koala_reghs_p02_10, paste0("lambdat[", 1:10, "]"))
trace_plot(koala_reghs_p02_10, paste0("beta[", 1:10, "]"))
koala_reghs_p02_sum10 <- jags_summary(koala_reghs_p02_10, warmup = 0)

kappa_ <- koala_reghs_p02_sum10[rownames(koala_reghs_p02_sum10) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 10 potential covariates and $p_0 = 5$

```{r, eval = T}
set.seed(12182025)

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 5,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat10$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_p05_10.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_p05_10 <- readRDS("koala_reghs_p05_10.rds")
trace_plot(koala_reghs_p05_10, "tau")
trace_plot(koala_reghs_p05_10, paste0("lambdat[", 1:10, "]"))
trace_plot(koala_reghs_p05_10, paste0("beta[", 1:10, "]"))
koala_reghs_p05_sum10 <- jags_summary(koala_reghs_p05_10, warmup = 0)

kappa_ <- koala_reghs_p05_sum10[rownames(koala_reghs_p05_sum10) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 10 potential covariates and $p_0 = 8$

```{r, eval = T}
set.seed(12182025)

fit <- jags.parallel(
  model.file = reg_hs_tau0,
  n.chains = 3,
  inits = init_hs10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0 = 8,
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat10$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_p08_10.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_p08_10 <- readRDS("koala_reghs_p08_10.rds")
trace_plot(koala_reghs_p08_10, "tau")
trace_plot(koala_reghs_p08_10, paste0("lambdat[", 1:10, "]"))
trace_plot(koala_reghs_p08_10, paste0("beta[", 1:10, "]"))
koala_reghs_p08_sum10 <- jags_summary(koala_reghs_p08_10, warmup = 0)

kappa_ <- koala_reghs_p08_sum10[rownames(koala_reghs_p08_sum10) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 2$

```{r, eval = T}
set.seed(12202025)

reg_hs_tau0_p0prior <- function(){
  # likelihood
  for(i in 1:nrow_site_df){
    logit(psi[i]) <- beta0 + inprod(beta[1:D], x[i, 1:D])
    z[i] ~ dbern(psi[i])
  }
  
  for(j in 1:nrow_samp_df){
    logit(p[j]) <- alpha0 + inprod(alpha[1], w[j, 1])
    y[j] ~ dbern(p[j]*z[site_season_ndx[j]])
  }
  
  ## p0_mixture prior 
  inform_p0 ~ dnorm(p0_guess, 1/var_inform);T(1, D-1)
  flat_p0 ~ dnorm(p0_guess, 1/var_flat);T(1, D-1)
  p0 <- 0.5*inform_p0 + 0.5*flat_p0
  
  # compute quantities for hyper prior on tau
  tau0 <- p0/(D-p0) * sqrtpseudovar / (sqrtnsite)
  tau02 <- tau0 * tau0
  
  # priors
  beta0 ~ dnorm(0, 1/2) # intercept
  alpha0 ~ dnorm(0, 1/2) # intercept
  alpha ~ dnorm(0, 1/2) # single slope for weather 
  
  tau ~ dt(0, 1/tau02, 1);T(0,) # global shrinkage
  tau2 <- tau*tau
  c2.rep ~ dgamma(df.slab/2, scale.slab^2*df.slab/2) 
  c2 <- 1/c2.rep
  
  for(j in 1:D){
    lambda[j] ~ dt(0, 1, 1);T(0,)
    lambda2[j] <- lambda[j]*lambda[j]
    lambdat[j] <- (c2 * lambda2[j])/(c2 + tau2 * lambda2[j])
    lambda2t[j] <- lambdat[j] * lambdat[j]
    beta[j] ~ dnorm(0, 1/(tau2 * lambda2t[j]))
  }
  
  # calculate shrinkage factor
  b <- 1/(1 + nrow_site_df * 1/pseudovar * c2)
  
  for(j in 1:D){
    kappa[j] <- 1/(1 + nrow_site_df * 1/pseudovar * tau2 * 1 * lambda2t[j])  
    kappat[j] <- (1-b)*kappa[j] + b
  }
  meff <- sum(1 - kappa[1:D])
  mefft <- (1-b)*meff
}


fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 2,
    var_inform = 1, 
    var_flat = 100, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat100$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_mixture2_100.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_mixture2_100 <- readRDS("koala_reghs_mixture2_100.rds")
trace_plot(koala_reghs_mixture2_100, "tau")
trace_plot(koala_reghs_mixture2_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(koala_reghs_mixture2_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
koala_reghs_mixture2_sum100 <- jags_summary(koala_reghs_mixture2_100, warmup = 0)

kappa_ <- koala_reghs_mixture2_sum100[rownames(koala_reghs_mixture2_sum100) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 10$

```{r, eval = T}
set.seed(12202025)

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 10,
    var_inform = 1, 
    var_flat = 100, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat100$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_mixture10_100.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_mixture10_100 <- readRDS("koala_reghs_mixture10_100.rds")
trace_plot(koala_reghs_mixture10_100, "tau")
trace_plot(koala_reghs_mixture10_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(koala_reghs_mixture10_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
koala_reghs_mixture10_sum100 <- jags_summary(koala_reghs_mixture10_100, warmup = 0)

kappa_ <- koala_reghs_mixture10_sum100[rownames(koala_reghs_mixture10_sum100) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 25$

```{r, eval = T}
set.seed(12202025)

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs100,
  data = list(
    nsite = nrow(koala_dat100$site_df),
    D = ncol(koala_dat100$x),
    x = koala_dat100$x,
    w = koala_dat100$w, 
    nrow_site_df = nrow(koala_dat100$site_df), 
    nrow_samp_df = nrow(koala_dat100$samp_df), 
    site_season_ndx = koala_dat100$samp_df$site,
    y = koala_dat100$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 25,
    var_inform = 1, 
    var_flat = 100, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat100$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_mixture25_100.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_mixture25_100 <- readRDS("koala_reghs_mixture25_100.rds")
trace_plot(koala_reghs_mixture25_100, "tau")
trace_plot(koala_reghs_mixture25_100, paste0("lambdat[", sample(1:100, 9), "]"))
trace_plot(koala_reghs_mixture25_100, c("beta0", "beta[1]", "beta[2]", paste0("beta[", sample(3:100, 9), "]")))
koala_reghs_mixture25_sum100 <- jags_summary(koala_reghs_mixture25_100, warmup = 0)

kappa_ <- koala_reghs_mixture25_sum100[rownames(koala_reghs_mixture25_sum100) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 10 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 2$

```{r, eval = T}
set.seed(12202025)

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 2,
    var_inform = 1, 
    var_flat = 100, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat10$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_mixture2_10.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_mixture2_10 <- readRDS("koala_reghs_mixture2_10.rds")
trace_plot(koala_reghs_mixture2_10, "tau")
trace_plot(koala_reghs_mixture2_10, paste0("lambdat[", 1:10, "]"))
trace_plot(koala_reghs_mixture2_10, c("beta0", "beta[1]", "beta[2]", paste0("beta[", 3:10, "]")))
koala_reghs_mixture2_sum10 <- jags_summary(koala_reghs_mixture2_10, warmup = 0)

kappa_ <- koala_reghs_mixture2_sum10[rownames(koala_reghs_mixture2_sum10) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 10 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 5$

```{r, eval = T}
set.seed(12202025)

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 5,
    var_inform = 1, 
    var_flat = 100, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat10$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_mixture5_10.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_mixture5_10 <- readRDS("koala_reghs_mixture5_10.rds")
trace_plot(koala_reghs_mixture5_10, "tau")
trace_plot(koala_reghs_mixture5_10, paste0("lambdat[", 1:10, "]"))
trace_plot(koala_reghs_mixture5_10, c("beta0", "beta[1]", "beta[2]", paste0("beta[", 3:10, "]")))
koala_reghs_mixture5_sum10 <- jags_summary(koala_reghs_mixture5_10, warmup = 0)

kappa_ <- koala_reghs_mixture5_sum10[rownames(koala_reghs_mixture5_sum10) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

## Fit regularized horseshoe with $\tau \sim C^+(0, \tau_0)$ with 100 potential covariates and with a mixture prior for $p_0$
## mixture of truncated normals centered at a guess of $p_0 = 8$

```{r, eval = T}
set.seed(12202025)

fit <- jags.parallel(
  model.file = reg_hs_tau0_p0prior,
  n.chains = 3,
  inits = init_hs10,
  data = list(
    nsite = nrow(koala_dat10$site_df),
    D = ncol(koala_dat10$x),
    x = koala_dat10$x,
    w = koala_dat10$w, 
    nrow_site_df = nrow(koala_dat10$site_df), 
    nrow_samp_df = nrow(koala_dat10$samp_df), 
    site_season_ndx = koala_dat10$samp_df$site,
    y = koala_dat10$samp_df$det,
    df.slab = 4,
    scale.slab = 2, 
    p0_guess = 8,
    var_inform = 1, 
    var_flat = 100, 
    sqrtpseudovar = sqrt(4),
    pseudovar = 4, 
    sqrtnsite = sqrt(nrow(koala_dat10$site_df))
  ),
  n.iter = 250000,
  n.burnin = 125000,
  n.thin = 5,
  parameters.to.save = c("alpha0", "alpha", "beta0", "beta", "tau", "lambdat", "kappat", "mefft"),
  jags.seed = 1,
  jags.module = c("glm")
)

saveRDS(convert_to_list(fit), file = "koala_reghs_mixture8_10.rds")
```

```{r, fig.width = 12, fig.height = 8}
koala_reghs_mixture8_10 <- readRDS("koala_reghs_mixture8_10.rds")
trace_plot(koala_reghs_mixture8_10, "tau")
trace_plot(koala_reghs_mixture8_10, paste0("lambdat[", 1:10, "]"))
trace_plot(koala_reghs_mixture8_10, c("beta0", "beta[1]", "beta[2]", paste0("beta[", 3:10, "]")))
koala_reghs_mixture8_sum10 <- jags_summary(koala_reghs_mixture8_10, warmup = 0)

kappa_ <- koala_reghs_mixture8_sum10[rownames(koala_reghs_mixture8_sum10) %>% str_detect("kappa") %>% which(), "Mean"] 

sum(kappa_ < 0.5)
```

