# library(tidyverse)
# 
# logit <- function(p){
#   log(p/(1 - p))
# }
# 
# invlogit <- function(x){
#   exp(x)/(1 + exp(x))
# }
# 
# set.seed(12345)
# 
# nsite <- 100
# nsamp <- 10
# 
# alpha0 <- 1 
# alpha <- 2
# w <- rnorm(nsite*nsamp, 0, 1) %>% 
#   matrix(nrow = nsite*nsamp, ncol = 1) %>% 
#   scale()
# 
# colnames(w) <- "w1"
# 
# det.prob <- invlogit(alpha0 + w %*% alpha)
# 
# beta0 <- 1 
# 
# # 3 true covariates
# beta3 <- c(2, -2, 2) 
# x3 <- rnorm(nsite*length(beta3), 0, 1) %>% 
#   matrix(nrow = nsite, ncol = length(beta3)) %>% 
#   scale()
# 
# # 3 true covariates and 97 zero
# beta100 <- c(beta3, rep(0, 97))
# x97 <- rnorm(nsite*97, 0, 1) %>% 
#   matrix(nrow = nsite, ncol = 97) %>% 
#   scale()
# x100 <- cbind(x3, x97)
# 
# colnames(x100) <- paste0("x", 1:length(beta100))
# 
# occ.prob100 <- invlogit(beta0 + x100 %*% beta100)
# 
# z100 <- rbinom(nsite, 1, occ.prob100)
# 
# site_df100 <- data.frame(site = 1:nsite, 
#                          x100, 
#                          occ.prob100 = occ.prob100,
#                          z100)
# 
# samp_df100 <- data.frame(site = rep(1:nsite, each = nsamp), 
#                          samp = rep(1:nsamp, nsite),
#                          w = w,
#                          det.prob = det.prob, 
#                          z100 = rep(z100, each = nsamp))
# 
# y <- rep(NA, nsite*nsamp)
# 
# for(i in 1:nrow(samp_df100)){
#   y[i] <- rbinom(1, 1, samp_df100$det.prob[i] * samp_df100$z100[i])
# }
# 
# samp_df100 <- cbind(samp_df100, 
#                     y = y)
# 
# sim_data100 <- list(site_df = site_df100[, c("site", paste0("x", 1:100))],
#                     samp_df = samp_df100[, c("site", "samp", "w1", "y")], 
#                     z = z100, 
#                     x = data.frame(x100), 
#                     w = data.frame(w = samp_df100$w), 
#                     truth = list(beta0 = beta0, 
#                                  beta = beta100, 
#                                  alpha0 = alpha0, 
#                                  alpha = alpha))





data("sim_data100")
test <- horseshoeocc(data = sim_data100,
                     det_model = ~w1,
                     occ_model = ~.,
                     mixture_mean1 = 3,
                     mixture_var1 = 1, 
                     mixture_mean2 = 3,
                     mixture_var2 = 25,
                     niter = 50000)



test_sum <- summary(test)

plot(test_sum, c("meff"))
