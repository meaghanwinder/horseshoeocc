#' Title
#'
#' @param object
#' @param warmup
#' @param thin
#'
#' @returns
#' @export
#'
#' @examples
#'
#'
summary.horseshoeocc <- function(object, warmup = 0, thin = 1){
  if(class(object)[1] == "horseshoeocc"){
    object <- object$mcmc
  }
  # convert to coda for summary
  fit_warmup <- lapply(object, function(x) x[(warmup+1):nrow(x),])
  coda_samples <- as.mcmc.list(lapply(fit_warmup, function(x) as.mcmc(
    x, start = warmup+1, end = nrow(object), thin = thin
  )))

  sum <- summary(coda_samples)
  params <- dimnames(sum$statistics)[[1]]
  # clean up parameter names
  tmp_kappa <- params[which(str_detect(params, "kappa"))] %>%
    str_remove(., "t")
  tmp_lambda <- params[which(str_detect(params, "lambda"))] %>%
    str_remove(., "t")
  tmp_meff <- params[which(str_detect(params, "meff"))] %>%
    str_remove(., "t")
  params[which(str_detect(params, "kappa"))] <- tmp_kappa
  params[which(str_detect(params, "lambda"))] <- tmp_lambda
  params[which(str_detect(params, "meff"))] <- tmp_meff

  tmp_sum <- cbind(sum$statistics, sum$quantiles)

  # get r hat / n_eff
  mat <- matrix(NA, nrow = nrow(tmp_sum), ncol = 3)
  colnames(mat) <- c("Rhat", "ess_bulk", "ess_tail")
  for(i in 1:nrow(tmp_sum)){
    tmp <- sapply(object, function(x) x[,i])
    mat[i,] <- c(Rhat(tmp), ess_bulk(tmp), ess_tail(tmp))
  }

  # get hdi interval
  all_samps <- do.call("rbind", coda_samples)
  hdi_2.5 <- apply(all_samps, 2, hdi)[1, ]
  hdi_97.5 <- apply(all_samps, 2, hdi)[2, ]

  # get median
  median <- apply(all_samps, 2, median)

  # out
  out <- cbind(tmp_sum,
               Median = median,
               "HDI 2.5%" = hdi_2.5,
               "HDI 97.5%" = hdi_97.5,
               mat)
  class(out) <- c('horseshoeocc_sum', class(out))

  return(out)
}
